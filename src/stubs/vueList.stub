<template>
    <div class="bg-white container">
    <h1>
        <%$model->name%>
    </h1>
        <table class="table table-bordered table__admin">
            <thead>
            <tr>
                <th colspan = 999>
                </th>
            </tr>
            </thead>
            <tbody>
                <template v-for="<%strtolower($model->name)$> in <%strtolower(str_plural(($model->name)$>">
                    <<%strtolower($model->name)$>-list-item :data="asset"></<%strtolower($model->name)$>-list-item>
                </template>
            </tbody>
            <tfoot>
            <tr>
                <td colspan="100">
                    <div class="table__controls table__footer-utilities">
                        <!--<a href="#">-->
                            <!--<i class="fas fa-trash-alt"></i>-->
                        <!--</a>-->

                        <!--<a href="#">-->
                            <!--<i class="fas fa-upload"></i>-->
                        <!--</a>-->

                        <!--<a href="#">-->
                            <!--<i class="fas fa-download"></i>-->
                        <!--</a>-->
                    </div>
                    <div class="table__controls table__footer-add">
                        <a href="#" @click.stop.prevent="openNewModal">
                            <i class="fas fa-plus"></i>
                        </a>
                    </div>
                </td>
            </tr>
            </tfoot>
        </table>
    </div>
</template>

<script>
    import <%$model->name%>ListItem from './<%strtolower($model->name)$>-list-item';
    import { mapActions } from 'vuex';

    export default {
        name: '<%$model->name%>List',
        props: {
            module: {
                required: true,
            }
        },
        mixins: [],
        components: {<%$model->name%>ListItem},
        data() {
            return {}

        },
        mounted() {

        },
        computed: {
        <%strtolower($model->name)%>: {
                get () {
                    return this.$store.state[this.module].active.<%strtolower(str_plural($model->name))%>
                },
                set (value) {
                    this.setList(value);
                }
            }
        },
        watch: {},
        methods: {

        }
    }
</script>
